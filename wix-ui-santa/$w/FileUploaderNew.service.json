{ "name": "FileUploaderNew",
  "memberOf": "$w",
  "mixes":
    [ "$w.FormElement",
      "$w.HiddenCollapsedMixin",
      "$w.DisabledMixin",
      "$w.FocusMixin",
      "$w.StyleMixin",
      "$w.RequiredMixin" ],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 41,
      "filename": "FileUploaderNew.js" },
  "docs":
    { "summary": "An upload button enables users to upload files to your site.",
      "description":
        [ "<h3 id=\"typical-scenario\">Typical File Upload Scenario</h3>",
          " <p>In a typical scenario, the page from which files are uploaded contains",
          " an upload button and another element, such as a regular button. The user chooses",
          " which file to upload by clicking the upload button and selecting the",
          " file in a native file chooser dialog. At that point the file is stored in",
          " the upload button's [`value`](#value) property as a [`File`](#File) object. Then",
          " the user triggers an event, such as a button click, on the other element.",
          " That element's event handler calls the [`startUpload()`](#startUpload)",
          " function to perform the actual upload. The upload either succeeds and",
          " gives you an [`UploadedFile`](#UploadedFile) object, or fails and gives you",
          " an [`UploadError`](#UploadError) object.</p>" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "buttonLabel",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 74,
              "filename": "FileUploaderNew.js" },
            { "lineno": 96,
              "filename": "FileUploaderNew.js" } ],
        "docs":
          { "summary": "Sets or gets the label on the upload button.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "fileType",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 118,
              "filename": "FileUploaderNew.js" },
            { "lineno": 149,
              "filename": "FileUploaderNew.js" } ],
        "docs":
          { "summary": "Sets or gets the type of file that a user can upload.",
            "description":
              [ "Setting the `fileType` property sets the type of file that",
                " a user can upload. The value of `fileType` can be set to either",
                " `\"Image\"`, `\"Document\"`, or `\"Video\"`.",
                "",
                " Getting the `fileType` property returns the current type of",
                " file that a user can upload.",
                "",
                " The file types of the images and documents that can be uploaded are",
                " listed [here](https://support.wix.com/en/article/supported-media-file-types-and-file-sizes)." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "style",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.Style",
        "locations":
          [ { "lineno": 301,
              "filename": "FileUploaderNew.js" } ],
        "docs":
          { "summary": "Gets an object containing information about the upload button's styles.",
            "description":
              [ "The following styles can be used with upload buttons:",
                "",
                " + [`backgroundColor`]($w.Style.html#backgroundColor)",
                " + [`borderColor`]($w.Style.html#borderColor)",
                " + [`borderRadius`]($w.Style.html#borderRadius)",
                " + [`borderWidth`]($w.Style.html#borderWidth)",
                " + [`color`]($w.Style.html#color)",
                "",
                "",
                " Getting or setting an upload button's styles, gets or sets the styles of the",
                " upload button's regular state. It does not set the styles of the upload button's hover,",
                " focus, error, or disabled states." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "value",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.FileUploaderNew.File" ] },
        "locations":
          [ { "lineno": 175,
              "filename": "FileUploaderNew.js" },
            { "lineno": 206,
              "filename": "FileUploaderNew.js" } ],
        "docs":
          { "summary": "Returns a list of files that are pending upload.",
            "description":
              [ "Returns a list of [File](#File) objects that a user has selected to",
                " upload after pressing the upload button.",
                "",
                " See how `value` is used in a",
                " [typical file upload scenario](#typical-scenario)." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "reset",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 273,
              "filename": "FileUploaderNew.js" } ],
        "docs":
          { "summary": "Clears the files that are pending upload.",
            "description":
              [ "The `value` of the upload button contains a list of files that have been",
                " selected to upload. The `reset()` function clears these files." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "startUpload",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "$w.FileUploaderNew.UploadedFile" ] },
            "doc": "Fulfilled - Resolves when the file upload is completed.\nRejected - Rejects if the file upload fails." },
        "locations":
          [ { "lineno": 220,
              "filename": "FileUploaderNew.js" } ],
        "docs":
          { "summary": "Uploads the files that the user has chosen.",
            "description":
              [ "The `startUpload()` function triggers the upload of the files in the",
                " upload button's [value](#value) property.",
                "",
                " See how `startUpload()` is used in a",
                " [typical file upload scenario](#typical-scenario).",
                "",
                " The upload button does not accept files that are larger than 25MB." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "File",
        "locations":
          [ { "lineno": 11,
              "filename": "FileUploaderNew.js" } ],
        "docs":
          { "summary": "The object used by the `value` property that represents\n files ready for upload.",
            "links":
              [ "[value](#value)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "The file's name." },
            { "name": "size",
              "type": "string",
              "doc": "The file's size in bytes." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UploadError",
        "locations":
          [ { "lineno": 30,
              "filename": "FileUploaderNew.js" } ],
        "docs":
          { "summary": "The object returned by the `startUpload()` function's\n Promise when an upload fails.",
            "links":
              [ "[startUpload](#startUpload)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "errorCode",
              "type": "string",
              "doc": "Numeric The error's code." },
            { "name": "errorDescription",
              "type": "string",
              "doc": "The error's description." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UploadedFile",
        "locations":
          [ { "lineno": 21,
              "filename": "FileUploaderNew.js" } ],
        "docs":
          { "summary": "The object returned by the `startUpload()` function's\n Promise that contains the URL of the successfully uploaded file.",
            "links":
              [ "[startUpload](#startUpload)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "url",
              "type": "string",
              "doc": "The Wix URL of the uploaded file." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }
{ "name": "AudioPlayer",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 9,
      "filename": "MusicPlayer.js" },
  "docs":
    { "summary": "An element for playing audio files.",
      "description":
        [ "The <a href=\"https://support.wix.com/en/article/about-the-wix-audio-player\" target=\"_blank\">Wix Audio Player</a> allows",
          " you to add single audio tracks to your website.",
          "",
          " For a list of audio file types and sizes supported by the Wix Audio Player, click <a href=\"https://support.wix.com/en/article/supported-media-file-types-and-file-sizes\" target=\"_blank\">here</a>." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "artistName",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 27,
              "filename": "MusicPlayer.js" },
            { "lineno": 47,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Sets or gets the name of the artist displayed in an audio player.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "coverImage",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 153,
              "filename": "MusicPlayer.js" },
            { "lineno": 195,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Sets or gets the cover image displayed in an audio player.",
            "description":
              [ "Setting the `coverImage` property changes the displayed image to",
                " the image found at the new `coverImage` value.",
                "",
                " Getting the `coverImage` property returns the location of the",
                " cover image file.",
                "",
                " The image file can either be from the <a href=\"https://support.wix.com/en/article/about-the-media-manager\" target=\"_blank\">Media Manager</a> or",
                " an external file from any web location.",
                "",
                " The following URL formats are supported:",
                "",
                " + Media Manager: `wix:image://v1/<uri>/<filename>#originWidth=<width>&originHeight=<height>[&watermark=<watermark_manifest_string>]`",
                " + Web URL: `http(s)://<image url>`" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "currentTime",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 113,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Gets the current play time from the beginning of the audio track, in seconds.",
            "description":
              [ "To set the `currentTime` property, use the [`seek()`](#seek) function." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "duration",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 134,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Gets the total play time of the audio track, in seconds.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "isMuted",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "lineno": 366,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Indicates if the volume is currently muted.",
            "description":
              [ "To set the `isMuted` property, use the [`mute()`](#mute)",
                " and [`unmute()`](#unmute) functions." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "isPlaying",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "lineno": 388,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Indicates if an audio track is currently playing.",
            "description":
              [ "To set the `isPlaying` property, use the [`play()`](#play),",
                " [`pause()`](#pause), and [`stop()`](#stop) functions." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "src",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 233,
              "filename": "MusicPlayer.js" },
            { "lineno": 275,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Sets or gets the file location of the audio file.",
            "description":
              [ "Setting the `src` property changes the audio file to",
                " the audio found at the new `src` value.",
                "",
                " Getting the `src` property returns the location of the",
                " audio file.",
                "",
                " The audio file can be either from the <a href=\"https://support.wix.com/en/article/about-the-media-manager\" target=\"_blank\">Media Manager</a> or",
                " an external audio file from any web location.",
                "",
                " The URL formats supported are:",
                "",
                " + Media Manager: `wix:audio://v1/<audio_uri>/<filename>#duration=<duration>`",
                " + Web URL: `(http(s)|blob|data)://site.com/audio-file.mp3`" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "trackName",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 70,
              "filename": "MusicPlayer.js" },
            { "lineno": 90,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Sets or gets the track name displayed in an audio player.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "volume",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "number",
        "locations":
          [ { "lineno": 314,
              "filename": "MusicPlayer.js" },
            { "lineno": 344,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Sets or gets an audio player's volume.",
            "description":
              [ "Setting the `volume` property sets the audio player's percentage of total",
                " volume. Set the value to a number between `0` and `100`.",
                "",
                " Getting the `volume` property returns the audio player's current",
                " percentage of total volume." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "The actual volume heard by a site visitor depends on the value of the\n `volume` property and the volume settings on the visitor's device." ] } } ],
  "operations":
    [ { "name": "mute",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the volume has been muted." },
        "locations":
          [ { "lineno": 547,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Mutes audio volume.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onEnded",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the audio track has ended." } ],
        "ret":
          { "type": "$w.AudioPlayer",
            "doc": "The audio player that triggered the event." },
        "locations":
          [ { "lineno": 665,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when playback has ended.",
            "description":
              [ "An audio track ends when playback reaches the [`duration`](#duration) of the audio." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          { "eventType": "onEnded" } },
      { "name": "onPause",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the audio track is paused." } ],
        "ret":
          { "type": "$w.AudioPlayer",
            "doc": "The audio player that triggered the event." },
        "locations":
          [ { "lineno": 626,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when playback is paused.",
            "description":
              [ "An audio track can be paused by a user clicking the audio player's",
                " pause button or by calling its [`pause()`](#pause) or [`stop()`](#stop) functions." ],
            "links":
              [ "[pause( )](#pause)" ],
            "examples": [],
            "extra":
              {  } },
        "extra":
          { "eventType": "onPause" } },
      { "name": "onPlay",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the audio track is played." } ],
        "ret":
          { "type": "$w.AudioPlayer",
            "doc": "The audio player that triggered the event." },
        "locations":
          [ { "lineno": 587,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when playback is started or restarted.",
            "description":
              [ "An audio track can be played by a user clicking the audio player's",
                " play button or by calling its [`play()`](#play) function." ],
            "links":
              [ "[play( )](#play)" ],
            "examples": [],
            "extra":
              {  } },
        "extra":
          { "eventType": "onPlay" } },
      { "name": "onProgress",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the audio track progresses." } ],
        "ret":
          { "type": "$w.AudioPlayer",
            "doc": "The audio player that triggered the event." },
        "locations":
          [ { "lineno": 702,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when playback progresses.",
            "description":
              [ "An audio track continually progresses as the audio plays." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          { "eventType": "onProgress" } },
      { "name": "pause",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When playback has been paused." },
        "locations":
          [ { "lineno": 466,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Pauses playback.",
            "description":
              [ "The `pause()` function pauses the audio track and fires a `pause` event.",
                "",
                " The `pause` event handlers set on the audio player by the [onPause( )](#onPause)",
                " function are called." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "play",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When playback begins or resumes." },
        "locations":
          [ { "lineno": 441,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Begins or resumes playback.",
            "description":
              [ "The `play()` function plays the audio track and fires a `play` event.",
                "",
                " The `play` event handlers set on the audio player by the [onPlay( )](#onPlay)",
                " function are called." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "seek",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the playback has moved to the specified time." },
        "locations":
          [ { "lineno": 410,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Moves playback to the specified time, in seconds.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "stop",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When playback has been stopped." },
        "locations":
          [ { "lineno": 491,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Stops playback.",
            "description":
              [ "The `stop()` function stops the playback, moves to the beginning",
                "of the audio track, and fires a `pause` event.",
                "",
                " The `pause` event handlers set on the audio player by the [onPause( )](#onPause)",
                " function are called." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "togglePlay",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When playback has been toggled." },
        "locations":
          [ { "lineno": 517,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Toggles playback.",
            "description":
              [ "The `togglePlay()` function either pauses or plays the current playback based",
                " on its current state:",
                "",
                " + If the playback is paused, it plays and a `play` event is fired. The",
                "   `play` event handlers set on the audio player by the [onPlay( )](#onPlay)",
                "   function are called.",
                " + If the playback is playing, it is paused and a `pause` event is fired. The",
                "   `pause` event handlers set on the audio player by the [onPause( )](#onPause)",
                "   function are called." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "unmute",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the volume has been unmuted." },
        "locations":
          [ { "lineno": 567,
              "filename": "MusicPlayer.js" } ],
        "docs":
          { "summary": "Unmutes audio volume.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }
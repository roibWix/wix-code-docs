{ "name": "WixSearchBuilder",
  "memberOf": "wix-search",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "builder.js" },
  "docs":
    { "summary": "Contains functionality for refining a site search.",
      "description":
        [ "The `WixSearchBuilder` functions enable you to run, filter, and control",
          " which results a search returns.",
          "",
          " Typically, you build a search using the [`search()`](#wix-search.html#search) function,",
          " refine the search by chaining `WixSearchBuilder` functions, and then execute the",
          " search by chaining a [`find()`](#find) function.",
          "",
          " For example, the following searches a site for all products containing the phrase",
          " \"shoe\" in English in the `Stores/Products` collection and logs the first 5 results",
          " to the console:",
          "",
          " ```javascript",
          " import wixSearch from 'wix-search';",
          "",
          " wixSearch.search(\"shoe\")",
          "   .language(\"en\")",
          "   .documentType(\"Stores/Products\")",
          "   .limit(5)",
          "   .find()",
          "   .then( (results) => {",
          "     console.log(results.documents);",
          "   } );",
          " ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "documentType",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "type",
              "type": "string",
              "doc": "The document type to search in." } ],
        "ret":
          { "type": "wix-search.WixSearchBuilder",
            "doc": "A `WixSearchBuilder` object representing the refined search." },
        "locations":
          [ { "lineno": 32,
              "filename": "builder.js" } ],
        "docs":
          { "summary": "Refines a search builder to only search for documents of the specified document type.",
            "description":
              [ "The document type can be one of the following:",
                "",
                " + `Site/Pages`",
                " + `Blog/Posts`",
                " + `Bookings/Services`",
                " + `Forum/Posts`",
                " + `Stores/Products`",
                "",
                "",
                "By default, the search includes all document types.",
                "",
                "Setting the document type to `Site/Pages` restricts the search to all",
                "regular pages that have SEO indexing enabled. Note that all Wix site pages are indexed by default.",
                "Dynamic pages, custom router pages, and some Wix app pages are not currently included in the search.",
                "",
                "Setting the document type to a Wix app collection restricts the search to items in the specified collection.",
                "",
                "You cannot chain multiple `documentType()` functions to search for multiple document types. Only the last specified document type will be searched." ],
            "links": [],
            "examples":
              [ { "title": "Add a document type filter to a search",
                  "body":
                    [ "let newSearch = search.documentType(\"Site/Pages\");" ],
                  "extra":
                    {  } },
                { "title": "Create a search, add a document type filter, and run it",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "$w(\"#searchInput\").onKeyPress((keyPress) => {",
                      "  if (keyPress.key === \"Enter\") {",
                      "    const phrase = $w(\"#searchInput\").value;",
                      "    wixSearch.search(phrase)",
                      "      .documentType(\"Stores/Products\")",
                      "      .find()",
                      "      .then( (results) => {",
                      "        if(results.documents.length > 0) {",
                      "          let documents = results.documents;",
                      "        } else {",
                      "          console.log(\"No matching results\");",
                      "        }",
                      "      })",
                      "      .catch( (error) => {",
                      "        console.log(error);",
                      "      });",
                      "  }",
                      "});" ],
                  "extra":
                    {  } },
                { "title": "Build and run a search and display the results in a repeater",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "// Before search runs, set the repeater data as empty",
                      "$w('#repeater').data = [];",
                      "",
                      "$w(\"#searchInput\").onKeyPress((keyPress) => {",
                      "  if (keyPress.key === \"Enter\") {",
                      "    const phrase = $w(\"#searchInput\").value;",
                      "    wixSearch.search(phrase)",
                      "      .documentType(\"Stores/Products\")",
                      "      .find()",
                      "      .then((results) => {",
                      "        if (results.documents.length > 0) {",
                      "          $w('#repeater').data = results.documents;",
                      "        } else {",
                      "          console.log(\"No matching results\");",
                      "        }",
                      "      })",
                      "      .catch((error) => {",
                      "        console.log(error);",
                      "      });",
                      "  }",
                      "});",
                      "",
                      "$w(\"#repeater\").onItemReady(($item, itemData) => {",
                      "  $item(\"#title\").text = itemData.title;",
                      "  $item(\"#description\").text = itemData.description;",
                      "  $item(\"#image\").src = itemData.image;",
                      "  $item(\"#button\").link = itemData.url;",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to set up a search for store products and display the results in a repeater. Each button in the repeater links to the product page for the selected product." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "find",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-search.WixSearchResult" ] },
            "doc": "Fulfilled - A Promise that resolves to the results of the search.\nRejected - Error that caused the search to fail." },
        "locations":
          [ { "lineno": 123,
              "filename": "builder.js" } ],
        "docs":
          { "summary": "Returns the documents that match the search.",
            "description":
              [ "The `find()` function returns a Promise that resolves to the results found",
                " by the search and some information about the results. The Promise is",
                " rejected if any of the functions used to refine the search are invalid.",
                "",
                " If you build a search and don't refine it with any `WixSearchBuilder` functions,",
                " `find()` returns all matching site documents." ],
            "links": [],
            "examples":
              [ { "title": "Perform a find on a search",
                  "body":
                    [ "search.find()",
                      "  .then((results) => {",
                      "    if (results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.log(error);",
                      "  });",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to run a `find()` on a `search()` that was previously built and stored in a variable." } },
                { "title": "Create a search and run it",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "$w(\"#searchInput\").onKeyPress((keyPress) => {",
                      "  if (keyPress.key === \"Enter\") {",
                      "    const phrase = $w(\"#searchInput\").value;",
                      "    wixSearch.search(phrase)",
                      "      .find()",
                      "      .then((results) => {",
                      "        if (results.documents.length > 0) {",
                      "          let documents = results.documents;",
                      "        } else {",
                      "          console.log(\"No matching results\");",
                      "        }",
                      "      })",
                      "      .catch((error) => {",
                      "        console.log(error);",
                      "      });",
                      "  }",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to build a `search()` and then run a `find()` on it." } },
                { "title": "Create a search, add functions to the search, and run it",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "$w(\"#searchInput\").onKeyPress((keyPress) => {",
                      "  if (keyPress.key === \"Enter\") {",
                      "    const phrase = $w(\"#searchInput\").value;",
                      "    wixSearch.search(phrase)",
                      "      .language(\"ja\") // Japanese",
                      "      .documentType(\"Bookings/Services\")",
                      "      .limit(10)",
                      "      .find()",
                      "      .then((results) => {",
                      "        if (results.documents.length > 0) {",
                      "          let documents = results.documents;",
                      "        } else {",
                      "          console.log(\"No matching results\");",
                      "        }",
                      "      })",
                      "      .catch((error) => {",
                      "        console.log(error);",
                      "      });",
                      "  }",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to build a `search()`, chain additional functions such as `language()` and `limit()` to the search, and then run the `search()`." } },
                { "title": "Build and run a search and display the results in a repeater",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "// Before search runs, set the repeater data as empty",
                      "$w('#repeater').data = [];",
                      "",
                      "$w(\"#searchInput\").onKeyPress((keyPress) => {",
                      "  if (keyPress.key === \"Enter\") {",
                      "    const phrase = $w(\"#searchInput\").value;",
                      "    wixSearch.search(phrase)",
                      "      .documentType(\"Stores/Products\")",
                      "      .find()",
                      "      .then((results) => {",
                      "        if (results.documents.length > 0) {",
                      "          $w('#repeater').data = results.documents;",
                      "        } else {",
                      "          console.log(\"No matching results\");",
                      "        }",
                      "      })",
                      "      .catch((error) => {",
                      "        console.log(error);",
                      "      });",
                      "  }",
                      "});",
                      "",
                      "$w(\"#repeater\").onItemReady(($item, itemData) => {",
                      "  $item(\"#title\").text = itemData.title;",
                      "  $item(\"#description\").text = itemData.description;",
                      "  $item(\"#image\").src = itemData.image;",
                      "  $item(\"#button\").link = itemData.url;",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to set up a search for store products and display the results in a repeater. Each button in the repeater links to the product page for the selected product." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "language",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "language",
              "type": "string",
              "doc": "The search language." } ],
        "ret":
          { "type": "wix-search.WixSearchBuilder",
            "doc": "A `WixSearchBuilder` object representing the refined search." },
        "locations":
          [ { "lineno": 63,
              "filename": "builder.js" } ],
        "docs":
          { "summary": "Refines a search builder to search in the specified language.",
            "description":
              [ "The value of the search language must be a two-letter language code string of <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\">ISO 639-1 format</a>.",
                "",
                "Defaults for `language`:",
                "",
                " + If your site is multilingual, default is the [current language](wix-window.multilingual.html#currentLanguage).",
                " + If your site is not multilingual, default is the [site language](wix-site.html#language)." ],
            "links": [],
            "examples":
              [ { "title": "Add a language filter to a search",
                  "body":
                    [ "let newSearch = search.language(\"fr\"); // French" ],
                  "extra":
                    {  } },
                { "title": "Create a search, add a language filter, and run it",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "$w(\"#searchInput\").onKeyPress((keyPress) => {",
                      "  if (keyPress.key === \"Enter\") {",
                      "    const phrase = $w(\"#searchInput\").value;",
                      "    wixSearch.search(phrase)",
                      "      .language(\"pt\") // Portuguese",
                      "      .find()",
                      "      .then((results) => {",
                      "        if (results.documents.length > 0) {",
                      "          let documents = results.documents;",
                      "        } else {",
                      "          console.log(\"No matching results\");",
                      "        }",
                      "      })",
                      "      .catch((error) => {",
                      "        console.log(error);",
                      "      });",
                      "  }",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "limit",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "limit",
              "type": "number",
              "doc": "The number of documents to return, which is also the [`pageSize`](wix-search.WixSearchResult.html#pageSize) of the results object." } ],
        "ret":
          { "type": "wix-search.WixSearchBuilder",
            "doc": "A `WixSearchBuilder` object representing the refined search." },
        "locations":
          [ { "lineno": 80,
              "filename": "builder.js" } ],
        "docs":
          { "summary": "Limits the number of documents the search returns.",
            "description":
              [ "The `limit()` function defines the number of results a search returns in each",
                " page. Only one page of results is retrieved at a time. The [`next()`](wix-search.WixSearchResult.html#next)",
                " and [`prev()`](wix-search.WixSearchResult.html#prev) functions are used to",
                " navigate the pages of a search result.",
                "",
                " By default, `limit` is set to `25`.",
                "",
                " The maximum value that `limit()` can accept is `1000`." ],
            "links": [],
            "examples":
              [ { "title": "Add a limit to a search",
                  "body":
                    [ "let newSearch = search.limit(10);" ],
                  "extra":
                    {  } },
                { "title": "Create a search, add a limit, and run it",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "$w(\"#searchInput\").onKeyPress((keyPress) => {",
                      "  if (keyPress.key === \"Enter\") {",
                      "    const phrase = $w(\"#searchInput\").value;",
                      "    wixSearch.search(phrase)",
                      "      .limit(10)",
                      "      .find()",
                      "      .then((results) => {",
                      "        if (results.documents.length > 0) {",
                      "          let documents = results.documents;",
                      "        } else {",
                      "          console.log(\"No matching results\");",
                      "        }",
                      "      })",
                      "      .catch((error) => {",
                      "        console.log(error);",
                      "      });",
                      "  }",
                      "});" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of search results",
                  "body":
                    [ "async function retrieveAllDocuments(phrase){",
                      "  let allDocuments = [];",
                      "    ",
                      "  let results = await wixSearch.search(phrase)",
                      "    .limit(1000)",
                      "    .find();",
                      "    ",
                      "  allDocuments.push(results.documents);",
                      "    ",
                      "  while(results.hasNext()) {",
                      "    results = await results.next();",
                      "    allDocuments.push(results.documents);",
                      "  }",
                      "    ",
                      "  return allDocuments;",
                      "}" ],
                  "extra":
                    { "description": "This example demonstrates how to get all search results, bypassing the maximum limit of 1000." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "skip",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "skip",
              "type": "number",
              "doc": "The number of documents to skip in the search results before returning the results." } ],
        "ret":
          { "type": "wix-search.WixSearchBuilder",
            "doc": "A `WixSearchBuilder` object representing the refined search." },
        "locations":
          [ { "lineno": 101,
              "filename": "builder.js" } ],
        "docs":
          { "summary": "Sets the number of documents to skip before returning search results.",
            "description":
              [ "The `skip()` function defines the number of results to skip in the search",
                " results before returning new search results.",
                "",
                " For example, if you search your site and 20 documents match your search, but",
                " you set `skip` to 5, the results returned will skip the first 5 documents",
                " that match and return the 6th through 20th documents.",
                "",
                " By default, `skip` is set to 0.",
                "",
                "The maximum value that `skip()` can accept is `10000`." ],
            "links": [],
            "examples":
              [ { "title": "Add a skip to a search",
                  "body":
                    [ "let newSearch = search.skip(10);" ],
                  "extra":
                    {  } },
                { "title": "Create a search, add a skip, and run it",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "$w(\"#searchInput\").onKeyPress((keyPress) => {",
                      "  if (keyPress.key === \"Enter\") {",
                      "    const phrase = $w(\"#searchInput\").value;",
                      "    wixSearch.search(phrase)",
                      "      .skip(10)",
                      "      .find()",
                      "      .then((results) => {",
                      "        if (results.documents.length > 0) {",
                      "          let documents = results.documents;",
                      "        } else {",
                      "          console.log(\"No matching results\");",
                      "        }",
                      "      })",
                      "      .catch((error) => {",
                      "        console.log(error);",
                      "      });",
                      "  }",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }